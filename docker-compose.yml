version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: manga-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: manga-next
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - manga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d manga-next"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NextJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: manga-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/manga-next
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=your-secret-key-here
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - manga-network
    volumes:
      - ./public/images:/app/public/images
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        pnpm prisma migrate deploy &&
        pnpm prisma generate &&
        node server.js
      "

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: manga-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - manga-network
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:

networks:
  manga-network:
    driver: bridge
